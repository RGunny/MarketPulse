spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
    
  # Redis 설정
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 3000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
    
    # MongoDB 설정
    mongodb:
      auto-index-creation: true
      host: ${MONGO_HOST:localhost}
      port: ${MONGO_PORT:27017}
      username: ${MONGO_USERNAME:marketpulse_user}
      password: ${MONGO_PASSWORD:ENC(2IsMMkngNZxntzhLMNDJRy+TtrfzXxX8s8LyuCA1Q9ORvCw2p+q2hbOgrTnJPifnksL9WpnCoAqI6wuJUHbFJg==)}
      database: ${MONGO_DATABASE:marketpulse}

# Jasypt 암호화 설정
jasypt:
  encryptor:
    password: ${JASYPT_ENCRYPTOR_PASSWORD:RGunnySecretKey2025!@#}
    algorithm: PBEWITHHMACSHA512ANDAES_256
    key-obtention-iterations: 1000
    pool-size: 1
    provider-name: SunJCE
    salt-generator-classname: org.jasypt.salt.RandomSaltGenerator
    iv-generator-classname: org.jasypt.iv.RandomIvGenerator
    string-output-type: base64

# 암호화 설정 (CryptoService용)
app:
  encryption:
    master-key: ${MASTER_ENCRYPTION_KEY:7b6c5d4e3f2a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c}


market-data:
  kis: ## 한국투자증권
    enabled: true
    base-url: https://openapi.koreainvestment.com:9443
    app-key: ${KIS_APP_KEY:ENC(7EqZ9Egni4PWW66duuwbe7kLu05QmxalIxJw+UX9MkS5XH7q28cFZOyHmVuBm8IO0ilXgly9G3px4CRZ+3lgscEgaV9BF5qEBwFXpMej7kw=)}
    app-secret: ${KIS_APP_SECRET:ENC(Qh1nvFGTzpjBTxMCgJaaPEWn0ONWEDYpnrxU8g9KoBFqcFJ53sQVUQ6219nh+K4j1SEch7bCSaHlKFxFtqadsj0WF+Wpk661XhuGEbU39lASR/f10WuDqwrHJImzPn1xl5dstTo0pYJIrZT/PbW7WPH6AVTykbUC2wuQ92lU7yArQ7TfXAfulhtw8OY7noAXznJjrNlWDLCx8RGzAuHJJz01N7qZQPzpAZoVv1LQnBhLoZdZApC4hnym+zluzrrb)}
    
    # API 경로 설정
    stock-price-transaction-id: FHKST01010100
    stock-master-transaction-id: CTPF1702R
    grant-type: client_credentials
    token-path: /oauth2/tokenP
    stock-price-path: /uapi/domestic-stock/v1/quotations/inquire-price
    stock-master-path: /uapi/domestic-stock/v1/quotations/search-info
    health-path: /oauth2/tokenP
    
    # 시장별 상품 코드
    market-product-codes:
      kospi: "300"
      kosdaq: "301"
      konex: "302"
    
    # 헤더 설정
    headers:
      transaction-id: tr_id
      continuation-key: tr_cont
      cust-type: custtype
      personal-customer-type: P
      content-type: application/json; charset=utf-8
    
    # 타임아웃 설정
    timeouts:
      connection-timeout-seconds: 10
      read-timeout-seconds: 30
      write-timeout-seconds: 30
      response-timeout-seconds: 60

  alpha-vantage:
    enabled: false
    base-url: https://www.alphavantage.co/query
    api-key: ${ALPHA_VANTAGE_API_KEY}

  bok: ## Bank of Korea
    enabled: false
    base-url: https://ecos.bok.or.kr
    api-key: ${BOK_API_KEY}


# MarketPulse 알림 설정
marketpulse:
  alert:
    price:
      rise-threshold: 5.0         # 급등 알림 임계값 (%)
      fall-threshold: -5.0        # 급락 알림 임계값 (%)
      limit-up-threshold: 29.5    # 상한가 알림 임계값 (%)
      limit-down-threshold: -29.5 # 하한가 알림 임계값 (%)
  
  # 종목 마스터 동기화 설정
  stock-master:
    sync:
      enabled: false                      # 동기화 활성화 (운영 환경에서 true)
      mode: INCREMENTAL                   # 기본 동기화 모드
      full-sync-cron: "0 0 2 * * *"      # 전체 동기화: 매일 새벽 2시
      incremental-sync-cron: "0 0 * * * *" # 증분 동기화: 매시간
      kospi-sync-cron: "0 0 3 * * *"     # KOSPI 동기화: 매일 새벽 3시
      kosdaq-sync-cron: "0 30 3 * * *"   # KOSDAQ 동기화: 매일 새벽 3시 30분
      batch-size: 100                    # 배치 처리 크기
      batch-delay-ms: 100                # 배치 간 지연 (밀리초)
      api-timeout-seconds: 30            # API 타임아웃
      max-retry-attempts: 3              # 최대 재시도 횟수
      kospi-sync-enabled: false          # KOSPI 개별 동기화
      kosdaq-sync-enabled: false         # KOSDAQ 개별 동기화
      failure-threshold: 10.0            # 실패 임계값 (%)
      notification-enabled: true         # 결과 알림

# 이벤트 감지 설정 (Legacy - 향후 제거 예정)
event-detection:
  enabled: false
  thresholds:
    price-spike-percent: 5.0    # 5% 이상 급등
    price-drop-percent: -5.0    # 5% 이상 급락
    volume-surge-ratio: 2.0     # 평균 대비 200% 이상
  scheduler:
    interval: 30s               # 30초마다 감지

# Resilience4j Circuit Breaker 설정
resilience:
  circuit-breaker:
    enabled: true
    failure-rate-threshold: 30                    # 30% 실패율에서 Open  
    slow-call-rate-threshold: 50                  # 50% 느린 호출에서 Open
    slow-call-duration-threshold: 10s             # 10초 이상이면 느린 호출  
    permitted-number-of-calls-in-half-open-state: 5
    sliding-window-size: 50
    sliding-window-type: COUNT_BASED
    minimum-number-of-calls: 5
    wait-duration-in-open-state: 30s              # Open 상태 30초 유지 (빠른 복구)
    automatic-transition-from-open-to-half-open-enabled: true  # 자동 전환 활성화
    record-exceptions: true
    register-health-indicator: true

# Actuator 설정 (Circuit Breaker 모니터링)
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,circuitbreakers,circuitbreakerevents
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
  metrics:
    tags:
      application: event-detection

# gRPC 클라이언트 설정
grpc:
  client:
    notification:
      address: 'static://localhost:9082'
      negotiationType: plaintext

# 로깅 설정
logging:
  level:
    me.rgunny.marketpulse.event: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

---
# 로컬 개발 환경
spring:
  config:
    activate:
      on-profile: local

logging:
  level:
    me.rgunny.marketpulse.event: INFO

---
# 운영 환경
spring:
  config:
    activate:
      on-profile: prod
