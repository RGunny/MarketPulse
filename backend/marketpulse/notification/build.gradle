plugins {
    id 'com.google.protobuf' version '0.9.4'
}

dependencies {
    // Common 모듈 의존
    implementation project(':common')
    
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // gRPC Server
    implementation "net.devh:grpc-spring-boot-starter:${rootProject.versions.grpcSpringBoot}"
    implementation "io.grpc:grpc-protobuf:${rootProject.versions.grpc}"
    implementation "io.grpc:grpc-stub:${rootProject.versions.grpc}"
    implementation "javax.annotation:javax.annotation-api:${rootProject.versions.javaxAnnotation}"
    
    // Slack SDK
    implementation 'com.slack.api:slack-api-client:1.40.3'
    implementation 'com.slack.api:slack-api-model:1.40.3'
    
    // Metrics
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    
    // Test - root에 있는 것 제외
    testImplementation 'io.projectreactor:reactor-test'
}

// Spring Boot 메인 클래스 설정
springBoot {
    mainClass = 'me.rgunny.marketpulse.notification.NotificationApplication'
}

// Protobuf 설정
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${rootProject.versions.protobuf}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${rootProject.versions.grpc}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}